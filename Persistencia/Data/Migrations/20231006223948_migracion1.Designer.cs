// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(Puestico_context))]
    [Migration("20231006223948_migracion1")]
    partial class migracion1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entidades.Persona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido_persona")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("Id_punto_fk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_persona")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.HasIndex("Id_punto_fk");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Punto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre_punto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre del Punto");

                    b.HasKey("ID");

                    b.ToTable("Puntos", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("Id_persona_fk")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("User_name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.HasIndex("Id_persona_fk")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Persona", b =>
                {
                    b.HasOne("Dominio.Entidades.Punto", "Punto")
                        .WithMany("Personas")
                        .HasForeignKey("Id_punto_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Punto");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("Dominio.Entidades.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("Dominio.Entidades.Usuario", "Id_persona_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entidades.Persona", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entidades.Punto", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
